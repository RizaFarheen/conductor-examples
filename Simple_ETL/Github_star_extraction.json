{
    "updateTime": 1652460631310,
    "name": "Github_star_workflow",
    "description": "Building the github star workflow",
    "version": 1,
    "tasks": [
      {
        "name": "calculate_start_cutoff",
        "taskReferenceName": "calculate_start_cutoff_ref",
        "inputParameters": {
          "evaluatorType": "javascript",
          "expression": "new Date(Date.now() - 86400 * 1000).toISOString();"
        },
        "type": "INLINE",
        "decisionCases": {},
        "defaultCase": [],
        "forkTasks": [],
        "startDelay": 0,
        "joinOn": [],
        "optional": false,
        "defaultExclusiveJoinTask": [],
        "asyncComplete": false,
        "loopOver": []
      },
      {
        "name": "Get_repo_details",
        "taskReferenceName": "Get_repo_details_ref",
        "inputParameters": {
          "http_request": {
            "uri": "https://api.github.com/repos/${workflow.input.gh_account}/${workflow.input.gh_repo}",
            "method": "GET",
            "headers": {
              "Authorization": "token ${workflow.input.gh_token}",
              "Accept": "application/vnd.github.v3.star+json"
            }
          }
        },
        "type": "HTTP",
        "decisionCases": {},
        "defaultCase": [],
        "forkTasks": [],
        "startDelay": 0,
        "joinOn": [],
        "optional": false,
        "defaultExclusiveJoinTask": [],
        "asyncComplete": false,
        "loopOver": []
      },
      {
        "name": "get_all_stars",
        "taskReferenceName": "get_all_stars_loop_ref",
        "inputParameters": {
          "stargazers": "${Get_repo_details_ref.output.response.body.stargazers_count}",
          "offset": "${calculate_start_cutoff_ref.output}"
        },
        "type": "DO_WHILE",
        "decisionCases": {},
        "defaultCase": [],
        "forkTasks": [],
        "startDelay": 0,
        "joinOn": [],
        "optional": false,
        "defaultExclusiveJoinTask": [],
        "asyncComplete": false,
        "loopCondition": "if ($.get_all_stars_loop_ref['iteration'] < Math.ceil(($.stargazers-$.offset)/100 +1)) { true; } else { false; }",
        "loopOver": [
          {
            "name": "pagination_calc",
            "taskReferenceName": "pagination_calc_ref",
            "inputParameters": {
              "offset": "${workflow.input.star_offset}",
              "iterator": "${get_all_stars_loop_ref.output.iteration}",
              "evaluatorType": "javascript",
              "expression": "function e() {return parseInt($.offset/100 + $.iterator)}e();"
            },
            "type": "INLINE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": []
          },
          {
            "name": "100_stargazers",
            "taskReferenceName": "hundred_stargazers_ref",
            "inputParameters": {
              "counter": "${pagination_calc_ref.output.result}",
              "http_request": {
                "uri": "https://api.github.com/repos/${workflow.input.gh_account}/${workflow.input.gh_repo}/stargazers?page=${pagination_calc_ref.output.result}&per_page=100",
                "method": "GET",
                "headers": {
                  "Authorization": "token ${workflow.input.gh_token}",
                  "Accept": "application/vnd.github.v3.star+json"
                }
              }
            },
            "type": "HTTP",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "retryCount": 3
          },
          {
            "name": "jq_cleanup_stars",
            "taskReferenceName": "jq_cleanup_stars_ref",
            "inputParameters": {
              "activityName": "${workflow.input.activity_name}",
              "starlist": "${hundred_stargazers_ref.output.response.body}",
              "queryExpression": "[.starlist[] | select (.starred_at > \"${workflow.input.cutoff_date}\") |{occurred_at:.starred_at, title: \"${workflow.input.activity_name}\", member: {github:  .user.login}}]"
            },
            "type": "JSON_JQ_TRANSFORM",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": []
          }
        ]
      },
      {
        "name": "jq_stars_combine",
        "taskReferenceName": "jq_stars_combine",
        "inputParameters": {
          "bigList": "${get_all_stars_loop_ref.output}",
          "queryExpression": ".bigList[].jq_cleanup_stars_ref?.resultList?[][]"
        },
        "type": "JSON_JQ_TRANSFORM",
        "decisionCases": {},
        "defaultCase": [],
        "forkTasks": [],
        "startDelay": 0,
        "joinOn": [],
        "optional": false,
        "defaultExclusiveJoinTask": [],
        "asyncComplete": false,
        "loopOver": []
      },
      {
        "name": "loop_through_users",
        "taskReferenceName": "loop_through_users_ref",
        "inputParameters": {
          "activities": "${jq_stars_combine.output.resultList}"
        },
        "type": "DO_WHILE",
        "decisionCases": {},
        "defaultCase": [],
        "forkTasks": [],
        "startDelay": 0,
        "joinOn": [],
        "optional": false,
        "defaultExclusiveJoinTask": [],
        "asyncComplete": false,
        "loopCondition": "if ($.loop_through_users_ref['iteration'] < $.activities.length) { true; } else { false; }",
        "loopOver": [
          {
            "name": "zero_offset_fix",
            "taskReferenceName": "zero_offset_fix",
            "inputParameters": {
              "iterator": "${loop_through_users_ref.output.iteration}",
              "jsonList": "${jq_stars_combine.output.resultList}",
              "evaluatorType": "javascript",
              "expression": " $.jsonList[$.iterator -1];"
            },
            "type": "INLINE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": []
          },
          {
            "name": "post_to_orbit",
            "taskReferenceName": "post_to_orbit_ref",
            "inputParameters": {
              "http_request": {
                "uri": "https://app.orbit.love/api/v1/${workflow.input.orbit_workspace}/activities",
                "method": "POST",
                "headers": {
                  "Authorization": "Bearer ${workflow.input.orbit_apikey}"
                },
                "body": "${zero_offset_fix.output.result}",
                "readTimeOut": 2000,
                "connectionTimeOut": 2000
              }
            },
            "type": "HTTP",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "retryCount": 3
          }
        ]
      }
    ],
    "inputParameters": [],
    "outputParameters": {
      "stargazers": "${Get_repo_details_ref.output.response.body.stargazers_count}"
    },
    "failureWorkflow": "failure_slack",
    "schemaVersion": 2,
    "restartable": true,
    "workflowStatusListenerEnabled": false,
    "ownerEmail": "doug.sillars@orkes.io",
    "timeoutPolicy": "ALERT_ONLY",
    "timeoutSeconds": 0,
    "variables": {},
    "inputTemplate": {}
  }